CREATE TABLE IF NOT EXISTS T_TOKEN (
	TK_COD      VARCHAR(50) NOT NULL, #Token API
    TK_DES      VARCHAR(100) NOT NULL, #Descrição
	PRIMARY KEY (TK_COD)
);

CREATE TABLE IF NOT EXISTS T_USER (
	USR_ICOD     VARCHAR(14) NOT NULL, #Codigo Interno Usuario AAAAMMDDHHMMSS
	
    #Dados Cliente#
    USR_EMAL     VARCHAR(100) NOT NULL, #Email
    USR_KBOT     VARCHAR(50), #Chave para APIs
	USR_PASS     VARCHAR(150) NOT NULL, #Senha
    USR_IMGP     VARCHAR(150) NOT NULL, #Imagem Perfil
    USR_NOME     VARCHAR(150) NOT NULL, #Nome
    USR_TELF     BIGINT(15) UNSIGNED, #Telefone
    USR_PLAN   	 TINYINT(1) UNSIGNED NOT NULL DEFAULT 0, #Plano 0-Gratis 1-Premiun 2-Atrasado
    
    #Campos do sistema#
    USR_STTS     TINYINT(1) UNSIGNED NOT NULL DEFAULT 0, #Status Email 0-Não confirmado
    USR_WPVF     TINYINT(1) UNSIGNED NOT NULL DEFAULT 0, #WhatsApp 0-Não Verificado
    USR_CDWP     VARCHAR(5), #Codigo Whatsapp
    USR_RSTP     TINYINT(1) UNSIGNED NOT NULL DEFAULT 0, #Reset Senha 0-Não ativo
    USR_CDPS     VARCHAR(50), #Codigo Redefinição de senha
    
    #Datas
    USR_DTC      DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, #Data de Criação
    USR_DTL      DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, #Data ultimo login
    USR_DTA      DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, #Data da ultima Alteração
    
    PRIMARY KEY (USR_ICOD)
);

CREATE TABLE IF NOT EXISTS T_CATG_ANUNC (
	CAT_ICOD     TINYINT(1) UNSIGNED NOT NULL, #Codigo Categoria
    CAT_DESC     VARCHAR(100) NOT NULL,
    CAT_STTS     TINYINT(1) UNSIGNED NOT NULL DEFAULT 1, #Status 0-Inativo 1-Ativo
	PRIMARY KEY (CAT_ICOD)
);

CREATE TABLE IF NOT EXISTS T_TYPE_ANUNC (
	TYP_ICOD     TINYINT(1) UNSIGNED NOT NULL, #Codigo Categoria
    TYP_DESC     VARCHAR(100) NOT NULL,
    TYP_STTS     TINYINT(1) UNSIGNED NOT NULL DEFAULT 1, #Status 0-Inativo 1-Ativo
	PRIMARY KEY (TYP_ICOD)
);

CREATE TABLE IF NOT EXISTS T_ANUNCIO (
	ANC_ICOD     VARCHAR(14) NOT NULL, #Codigo Interno Anuncio AAAAMMDDHHMMSS
    
    #Referencias
    ANC_USER     VARCHAR(14) NOT NULL, #Codigo Interno Usuario AAAAMMDDHHMMSS
    ANC_CATG     TINYINT(1) UNSIGNED NOT NULL,
    ANC_TYPE     TINYINT(1) UNSIGNED NOT NULL,
    
    #Filtros
    ANC_STRT      VARCHAR(100), #Rua - Filtro
    ANC_BAIR      VARCHAR(100), #Bairro - Filtro
    ANC_CITY      VARCHAR(100), #Cidade - Filtro
    ANC_UFST      VARCHAR(2), #Estado - Filtro
    ANC_JBPC      TINYINT(1) UNSIGNED NOT NULL DEFAULT 0, #Processado pelo JOB
    
    #Dados
    ANC_TITL     VARCHAR(100) NOT NULL, #Titulo anuncio
    ANC_ADRS     VARCHAR(100) NOT NULL, #Endereço anuncio
    ANC_DESC     VARCHAR(500) NOT NULL, #Descrição anuncio
    ANC_LATG     VARCHAR(100) NOT NULL, #Latitude anuncio
    ANC_LOGG     VARCHAR(100) NOT NULL, #Longitude anuncio
    ANC_VALR     DECIMAL(9,2) UNSIGNED NOT NULL DEFAULT '0.00', #Valor
    ANC_QRTS     TINYINT(2) UNSIGNED NOT NULL DEFAULT 0, #Quantidade de Quartos
    ANC_BANH     TINYINT(2) UNSIGNED NOT NULL DEFAULT 0, #Quantidade de Banheiros
    ANC_MTRS     INT(4) UNSIGNED NOT NULL DEFAULT 0, #Metros ²
    ANC_ESTC     TINYINT(2) UNSIGNED NOT NULL DEFAULT 0, #Vagas de estacionamento
    ANC_EXTA     TINYINT(1) UNSIGNED NOT NULL DEFAULT 0, #Possui area externa
    ANC_PSCN     TINYINT(1) UNSIGNED NOT NULL DEFAULT 0, #Possui Piscina
    ANC_ARLZ     TINYINT(1) UNSIGNED NOT NULL DEFAULT 0, #Área de Lazer
    
    #Extras    
    ANC_DEST     TINYINT(1) UNSIGNED NOT NULL DEFAULT 0, #Destacado 0-Não 1-Sim
    ANC_PONT     DECIMAL(9,2) UNSIGNED NOT NULL DEFAULT '0.00', #Pontuação
    ANC_DATC     DATETIME NOT NULL, #Data de Criação
    
    FOREIGN KEY (ANC_USER) REFERENCES T_USER(USR_ICOD),
    FOREIGN KEY (ANC_CATG) REFERENCES T_CATG_ANUNC(CAT_ICOD),
    FOREIGN KEY (ANC_TYPE) REFERENCES T_TYPE_ANUNC(TYP_ICOD),
	PRIMARY KEY (ANC_ICOD)
);
ALTER TABLE T_ANUNCIO ADD ANC_ARLZ TINYINT(1) UNSIGNED NOT NULL DEFAULT 0 after ANC_PSCN;

CREATE TABLE IF NOT EXISTS T_ANUN_IMG (
	AMG_ICOD     VARCHAR(14) NOT NULL, #Codigo Interno Anuncio
    AMG_IMG      VARCHAR(100) NOT NULL, #Imagem
    FOREIGN KEY (AMG_ICOD) REFERENCES T_ANUNCIO(ANC_ICOD),
	PRIMARY KEY (AMG_ICOD, AMG_IMG)
);

CREATE TABLE IF NOT EXISTS T_FAVORITE (
	FAV_ANUC     VARCHAR(14) NOT NULL, #Codigo Interno Anuncio
    FAV_USER      VARCHAR(100) NOT NULL, #Imagem
    FOREIGN KEY (FAV_ANUC) REFERENCES T_ANUNCIO(ANC_ICOD),
    FOREIGN KEY (FAV_USER) REFERENCES T_USER(USR_ICOD),
	PRIMARY KEY (FAV_ANUC, FAV_USER)
);